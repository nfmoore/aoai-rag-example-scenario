{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "12164655026923384675"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for resources"
      }
    },
    "userObjectId": {
      "type": "string",
      "metadata": {
        "description": "User Object ID for authenticated user"
      }
    }
  },
  "variables": {
    "serviceSuffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
    "resources": {
      "applicationInsightsName": "[format('appi01{0}', variables('serviceSuffix'))]",
      "containerRegistryName": "[format('cr01{0}', variables('serviceSuffix'))]",
      "logAnalyticsWorkspaceName": "[format('log01{0}', variables('serviceSuffix'))]",
      "storageAccountName": "[format('st01{0}', variables('serviceSuffix'))]",
      "userAssignedIdentityName": "[format('id01{0}', variables('serviceSuffix'))]",
      "containerAppEnvironmnetName": "[format('cae01{0}', variables('serviceSuffix'))]",
      "aiSearchName": "[format('srch01{0}', variables('serviceSuffix'))]",
      "openAiName": "[format('oai01{0}', variables('serviceSuffix'))]",
      "aiServicesName": "[format('aisa01{0}', variables('serviceSuffix'))]",
      "deploymentScriptName": "[format('ds01{0}', variables('serviceSuffix'))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-deployment', variables('resources').userAssignedIdentityName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').userAssignedIdentityName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "3718297678080327579"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the User Assigned Identity service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for User Assigned Identity service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the User Assigned Identity service"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').principalId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-01-deployment', variables('resources').storageAccountName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').storageAccountName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "14075893523994139509"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Storage service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for Storage service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the Storage service"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Storage service"
              }
            },
            "enableHns": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable hierarchical namespace"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "isHnsEnabled": "[parameters('enableHns')]",
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('ds{0}', parameters('name'))]",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.30.0",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "AZURE_STORAGE_ACCOUNT",
                    "value": "[parameters('name')]"
                  },
                  {
                    "name": "AZURE_STORAGE_KEY",
                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').keys[0].value]"
                  }
                ],
                "scriptContent": "      git clone https://github.com/nfmoore/azure-open-ai-example-scenarios.git\n      az storage container create --name data --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_KEY \n      az storage blob upload-batch --destination data --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_KEY --destination-path ./ --source ./azure-open-ai-example-scenarios/data\n      "
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-02-deployment', variables('resources').storageAccountName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').storageAccountName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "roles": {
            "value": [
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').aiSearchName)), '2022-09-01').outputs.principalId.value]",
                "id": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
              },
              {
                "principalId": "[parameters('userObjectId')]",
                "id": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                "type": "User"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "14075893523994139509"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Storage service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for Storage service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the Storage service"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Storage service"
              }
            },
            "enableHns": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable hierarchical namespace"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "isHnsEnabled": "[parameters('enableHns')]",
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('ds{0}', parameters('name'))]",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.30.0",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "AZURE_STORAGE_ACCOUNT",
                    "value": "[parameters('name')]"
                  },
                  {
                    "name": "AZURE_STORAGE_KEY",
                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').keys[0].value]"
                  }
                ],
                "scriptContent": "      git clone https://github.com/nfmoore/azure-open-ai-example-scenarios.git\n      az storage container create --name data --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_KEY \n      az storage blob upload-batch --destination data --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_KEY --destination-path ./ --source ./azure-open-ai-example-scenarios/data\n      "
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').aiSearchName))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').logAnalyticsWorkspaceName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          },
          "storageAccountId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-01-deployment', variables('resources').storageAccountName)), '2022-09-01').outputs.id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "8716779443418268881"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Log Analytics workspace"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for Log Analytics workspace"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the Log Analytics workspace"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Log Analytics workspace"
              }
            },
            "storageAccountId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Storage account ID to link to the Log Analytics workspace"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('name'), 'Alerts')]",
              "properties": {
                "storageAccountIds": [
                  "[parameters('storageAccountId')]"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('name'), 'CustomLogs')]",
              "properties": {
                "storageAccountIds": [
                  "[parameters('storageAccountId')]"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('name'), 'Ingestion')]",
              "properties": {
                "storageAccountIds": [
                  "[parameters('storageAccountId')]"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('name'), 'Query')]",
              "properties": {
                "storageAccountIds": [
                  "[parameters('storageAccountId')]"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "retentionInDays": 30,
                "sku": {
                  "name": "Standalone"
                }
              }
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-01-deployment', variables('resources').storageAccountName))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-deployment', variables('resources').containerRegistryName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').containerRegistryName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)), '2022-09-01').outputs.id.value]"
          },
          "roles": {
            "value": [
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName)), '2022-09-01').outputs.principalId.value]",
                "id": "7f951dda-4ed3-4680-a7ca-43fe172d538d"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "2880683818389779110"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Container Registry service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for Container Registry service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the Container Registry service"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Container Registry service"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2022-12-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
              "name": "all-logs-all-metrics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-deployment', variables('resources').containerAppEnvironmnetName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').containerAppEnvironmnetName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          },
          "logAnalyticsWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)), '2022-09-01').outputs.name.value]"
          },
          "logAnalyticsWorkspaceResourceGroupName": {
            "value": "[resourceGroup().name]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "12781803292218525281"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Application Insights service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for Application Insights service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the Application Insights service"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Application Insights service"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Log Analytics workspace name"
              }
            },
            "logAnalyticsWorkspaceResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Log Analytics workspace  resource group name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('logAnalyticsWorkspaceResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('logAnalyticsWorkspaceResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                  }
                }
              }
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.App/managedEnvironments/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-deployment', variables('resources').aiSearchName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').aiSearchName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)), '2022-09-01').outputs.id.value]"
          },
          "roles": {
            "value": [
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName)), '2022-09-01').outputs.principalId.value]",
                "id": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
              },
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName)), '2022-09-01').outputs.principalId.value]",
                "id": "1407120a-92aa-4202-b7e9-c0e197c71c8f"
              },
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-01-deployment', variables('resources').openAiName)), '2022-09-01').outputs.principalId.value]",
                "id": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
              },
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-01-deployment', variables('resources').openAiName)), '2022-09-01').outputs.principalId.value]",
                "id": "1407120a-92aa-4202-b7e9-c0e197c71c8f"
              },
              {
                "principalId": "[parameters('userObjectId')]",
                "id": "7ca78c08-252a-4471-8644-bb5ff32d4ba0",
                "type": "User"
              },
              {
                "principalId": "[parameters('userObjectId')]",
                "id": "8ebe5a00-799e-43f5-93ac-243d3dce84a7",
                "type": "User"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "10031389011035315454"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure AI Search service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the Azure AI Search service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the Azure AI Search service"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Azure AI Search service"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "standard"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "authOptions": {
                  "aadOrApiKey": {
                    "aadAuthFailureMode": "http401WithBearerChallenge"
                  }
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('name'))]",
              "name": "all-logs-all-metrics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Search/searchServices', parameters('name')), '2023-11-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-01-deployment', variables('resources').openAiName))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-01-deployment', variables('resources').openAiName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').openAiName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          },
          "kind": {
            "value": "OpenAI"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)), '2022-09-01').outputs.id.value]"
          },
          "roles": {
            "value": [
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName)), '2022-09-01').outputs.principalId.value]",
                "id": "a001fd3d-188f-4b5d-821b-7da978bf7442"
              },
              {
                "principalId": "[parameters('userObjectId')]",
                "id": "a001fd3d-188f-4b5d-821b-7da978bf7442",
                "type": "User"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "11553281893512969426"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the AI Services account"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for AI Services account"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the AI Services account"
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "CognitiveServices",
              "metadata": {
                "description": "Kind of AI Services account"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Azure Search account"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": [
                {
                  "name": "gpt-4-32k",
                  "version": "0613"
                },
                {
                  "name": "gpt-35-turbo-16k",
                  "version": "0613"
                },
                {
                  "name": "text-embedding-ada-002",
                  "version": "2"
                }
              ],
              "metadata": {
                "description": "Deployments for the AI Services account"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "aisaDeployments",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "condition": "[equals(parameters('kind'), 'OpenAI')]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), format('{0}-{1}', parameters('deployments')[copyIndex()].name, parameters('deployments')[copyIndex()].version))]",
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('deployments')[copyIndex()].name]",
                  "version": "[parameters('deployments')[copyIndex()].version]"
                },
                "versionUpgradeOption": "NoAutoUpgrade"
              },
              "sku": {
                "name": "Standard",
                "capacity": "[if(contains(parameters('deployments')[copyIndex()], 'capacity'), parameters('deployments')[copyIndex()].capacity, 20)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "S0"
              },
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('name')]"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "all-logs-all-metrics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-02-deployment', variables('resources').openAiName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').openAiName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          },
          "kind": {
            "value": "OpenAI"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)), '2022-09-01').outputs.id.value]"
          },
          "roles": {
            "value": [
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').aiSearchName)), '2022-09-01').outputs.principalId.value]",
                "id": "a001fd3d-188f-4b5d-821b-7da978bf7442"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "11553281893512969426"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the AI Services account"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for AI Services account"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the AI Services account"
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "CognitiveServices",
              "metadata": {
                "description": "Kind of AI Services account"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Azure Search account"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": [
                {
                  "name": "gpt-4-32k",
                  "version": "0613"
                },
                {
                  "name": "gpt-35-turbo-16k",
                  "version": "0613"
                },
                {
                  "name": "text-embedding-ada-002",
                  "version": "2"
                }
              ],
              "metadata": {
                "description": "Deployments for the AI Services account"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "aisaDeployments",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "condition": "[equals(parameters('kind'), 'OpenAI')]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), format('{0}-{1}', parameters('deployments')[copyIndex()].name, parameters('deployments')[copyIndex()].version))]",
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('deployments')[copyIndex()].name]",
                  "version": "[parameters('deployments')[copyIndex()].version]"
                },
                "versionUpgradeOption": "NoAutoUpgrade"
              },
              "sku": {
                "name": "Standard",
                "capacity": "[if(contains(parameters('deployments')[copyIndex()], 'capacity'), parameters('deployments')[copyIndex()].capacity, 20)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "S0"
              },
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('name')]"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "all-logs-all-metrics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').aiSearchName))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-deployment', variables('resources').aiServicesName)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resources').aiServicesName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "environment": "shared"
            }
          },
          "kind": {
            "value": "CognitiveServices"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)), '2022-09-01').outputs.id.value]"
          },
          "roles": {
            "value": [
              {
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName)), '2022-09-01').outputs.principalId.value]",
                "id": "25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "11553281893512969426"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the AI Services account"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for AI Services account"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the AI Services account"
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "CognitiveServices",
              "metadata": {
                "description": "Kind of AI Services account"
              }
            },
            "roles": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Role assignments for the Azure Search account"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": [
                {
                  "name": "gpt-4-32k",
                  "version": "0613"
                },
                {
                  "name": "gpt-35-turbo-16k",
                  "version": "0613"
                },
                {
                  "name": "text-embedding-ada-002",
                  "version": "2"
                }
              ],
              "metadata": {
                "description": "Deployments for the AI Services account"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "aisaDeployments",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "condition": "[equals(parameters('kind'), 'OpenAI')]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), format('{0}-{1}', parameters('deployments')[copyIndex()].name, parameters('deployments')[copyIndex()].version))]",
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('deployments')[copyIndex()].name]",
                  "version": "[parameters('deployments')[copyIndex()].version]"
                },
                "versionUpgradeOption": "NoAutoUpgrade"
              },
              "sku": {
                "name": "Standard",
                "capacity": "[if(contains(parameters('deployments')[copyIndex()], 'capacity'), parameters('deployments')[copyIndex()].capacity, 20)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "S0"
              },
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('name')]"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "all-logs-all-metrics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('roles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "[guid(parameters('name'), parameters('roles')[copyIndex()].principalId, parameters('roles')[copyIndex()].id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roles')[copyIndex()].id)]",
                "principalId": "[parameters('roles')[copyIndex()].principalId]",
                "principalType": "[if(contains(parameters('roles')[copyIndex()], 'type'), parameters('roles')[copyIndex()].type, 'ServicePrincipal')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-01-deployment', variables('resources').storageAccountName)), '2022-09-01').outputs.name.value]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').logAnalyticsWorkspaceName)), '2022-09-01').outputs.name.value]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').containerRegistryName)), '2022-09-01').outputs.name.value]"
    },
    "userAssignedIdentityName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').userAssignedIdentityName)), '2022-09-01').outputs.name.value]"
    },
    "containerAppEnvironmnetStagingName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', variables('resources').containerAppEnvironmnetName)), '2022-09-01').outputs.name.value]"
    }
  }
}